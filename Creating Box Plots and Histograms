## Written by Diran Jimenez

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib.backends.backend_pdf import PdfPages


# Get the list of bridges from our GitHub
bridge_data = pd.read_excel("https://raw.githubusercontent.com/DiranOrange/Key-Bridge-Code-and-Data/main/Corrected_Bridge_Boundaries.xlsx", header=0, index_col = 0, usecols=["STRUCTURE_NAME", "START_X", "START_Y","END_X", "END_Y"], converters={"START_X":float, "START_Y":float, "END_X": float, "END_Y":float})
dict_bridges = bridge_data.transpose().to_dict('list')
bridge_lines = {bridge: np.array(dict_bridges[bridge]).reshape(2,2) for bridge in dict_bridges}

# This file path should link to the data on your machine
folder_path = r"D:\Marine Data\New Bridge Data\\"

# The plots in this script are done based on annual data
years = [i for i in range(2018, 2024)]

# They are also split by different ship sizes, based on group discussion
lengths = [150, 180, 215, 250, 275, 300]
box_names = ["150-180", "180-215", "215-250", "250-275", "275-300", "Above 300"]
    # Units = meters

# These are the important bridges. If you'd like to quickly create figures for these bridges, loop through this list instead of all bridges
important_bridges = ["SUNSHINE SKYWAY BRIDGE", "CHESAPEAKE BAY BRIDGE", "FRANCIS SCOTT KEY BRIDGE", "VERZZANO NARROWS BRIDGE"]

# Give each year a different color
colors = ["red", "orange", "yellow", "green", "blue", "purple"]


for bridge in bridge_lines.keys():
    with PdfPages(f"D:\\Marine Data\\Bridge Plots\\Count Plots\\Plots for {bridge}.pdf") as pdf: 
        
        # Save the results into a dictionary that will eventually be a dataframe
        results = {i:[] for i in box_names}
        results["Year"] = []
        
        # Read the data stored locally
        data = pd.read_csv(folder_path + bridge + " Data.csv", usecols=["BaseDateTime", "Length", "VesselType"])
        
        # Remove rows with the header
        filtered = data[data["VesselType"] != 'VesselType']
        
        # Put the columns back in
        filtered.columns = ["BaseDateTime", 'VesselType', 'Length']
        
        # Blank values are turned into NaN values by NumPy
        good = filtered.astype({"VesselType":np.float32, "Length":np.float32})
        
        for y, c in zip(years, colors):
            # There will be a bar plot for each year, overlapping with each other
            list_of_counts = []
                # Thus create a new list of counts for each year
            
            # Pull all the boats from the year
            yearly_boats = good.loc[good["BaseDateTime"].apply(lambda x: x[:4]) == str(y)]["Length"][::2]
                # Read every other broadcast to match the number of trips (2 broadcasts / trip)
            
            # Get a count for the number of boats of a specific size
            for i in range(len(box_names)-1):
                count = sum(np.where( (yearly_boats >= lengths[i]) & (yearly_boats <= lengths[i+1]), 1, 0))
                results[box_names[i]].append(count)
                list_of_counts.append(count)
                
            # Create a count for boats larger than the largest size    
            out_count = sum(np.where( yearly_boats >= lengths[-1], 1, 0))
            results[box_names[-1]].append(out_count)
            list_of_counts.append(out_count)
            
            # Add the year
            results["Year"].append(y)
            
            # Create a bar plot of the data, keeping each face transparent and giving them a different line color
            plt.bar(box_names, list_of_counts, fc = (1,1,1,0), ls="solid", lw=1, ec=c, label=y)
        
        # Add labels, etc
        plt.title(f"{bridge} Histogram")
        plt.xlabel("Length (m)")
        plt.ylabel("Count (Annual)")
        plt.tight_layout() 
        plt.legend()
        pdf.savefig() 
        plt.close()
        
        # Write the results to a CSV file
        df = pd.DataFrame(results)
        df.set_index("Year", inplace=True)
        df.to_csv(f"D:\Marine Data\Bridge Plots\Annual Counts by Ship Size\Counts for {bridge}.csv")
        
        # Create a box plot of the results, with whiskers from the min to the max
        sns.boxplot(df, whis=(0,100))
        plt.title(f"{bridge} Box Plot")
        plt.xlabel("Length (m)")
        plt.ylabel("Count (Annual)")
        plt.tight_layout() 
        pdf.savefig()
        plt.close()        

